using UnityEngine;

public class EnemyAI_Remastered : MonoBehaviour
{
    [Header("Movement Settings")]
    public float speed = 2f;
    public float rayDistance = 1f;
    public LayerMask obstacleMask;
    public Vector2 moveDirection = Vector2.up; // Default forward

    [Header("Tick Settings")]
    public int ticksPerSecond = 10;
    private float _tickAccumulator;

    private void OnEnable()
    {
        Ticker.OnTickAction += HandleTick;
    }

    private void OnDisable()
    {
        Ticker.OnTickAction -= HandleTick;
    }

    private void HandleTick()
    {
        _tickAccumulator += ticksPerSecond / (float)Ticker.TicksPerSecond;

        while (_tickAccumulator >= 1f)
        {
            _tickAccumulator -= 1f;
            TickLogic();
        }
    }

    private void TickLogic()
    {
        // Raycast forward to detect obstacles
        RaycastHit2D hit = Physics2D.Raycast(transform.position, moveDirection, rayDistance, obstacleMask);
        Debug.DrawRay(transform.position, moveDirection * rayDistance, Color.red);

        if (hit.collider == null)
        {
            // Move forward one step per tick
            float effectiveTickRatio = (float)Ticker.TicksPerSecond / ticksPerSecond;
            Vector2 step = moveDirection.normalized * speed * (1f / ticksPerSecond) * effectiveTickRatio;
            transform.position += (Vector3)step;
        }
        else
        {
            // Optional: simple avoidance â€” turn randomly when blocked
            moveDirection = Quaternion.Euler(0, 0, Random.Range(90f, 270f)) * moveDirection;
        }
    }
}
